/*
 Bu ifadelerin kullanımı ile ilgili ayrıntılı bilgiye 
 https://www.w3schools.com/sql/sql_ref_keywords.asp
 adresinden ulaşabilirsiniz
*/
zincir SQL_EKLE 								            = " ADD ";  //Mevcut tabloya sütun ekler.
zincir SQL_KOŞUL_EKLE 							        = " ADD CONSTRAINT ";  // Tablo oluşturulduktan sonra koşul ekler.
zincir SQL_DEĞİŞTİR 							          = "ALTER ";  // Tablodaki sütuna ekleme,silme ve değiştirme yapar. Veya bir tablodaki sütunun veri tipini değiştirir.
zincir SQL_SÜTUN_DEĞİŞTİR 						      = "ALTER COLUMN ";  // Bir tablodaki sütunun veri tipini değiştirir.
zincir SQL_TABLO_DEĞİŞTİR 						      = "ALTER TABLE ";  // Bir tablodaki sütunlara ekleme yapar,siler veya değiştirir.
zincir SQL_HEPSİ								            = " ALL ";  // Bir alt sorgudaki bütün değerler koşulu sağlıyorsa "doğru(true-boolean)" değeri döner.
zincir SQL_VE									              = " AND ";  // Sadece her iki koşulun doğru olduğu yerlerdeki satırları kapsar. 
zincir SQL_HERHANGİ 							          = " ANY ";  // Alt sorgu değerlerinden herhangi biri koşulu sağlarsa "doğru (true-boolean)" değeri döner.
zincir SQL_OLARAK								            = " AS ";  // Tablo veya sütunun adını başka isimle değiştirir.
zincir SQL_ARTAN								            = " ASC ";  // Sonuç kümesini artan sırayla sıralar. 
zincir SQL_YEDEKLE								          = "BACKUP DATABASE ";  // Mecvut veri tabanının yedeğini oluşturur.
zincir SQL_ARALIK								            = " BETWEEN ";  // Verilmiş aralıktaki değerleri seçer.
zincir SQL_KOŞULDA								          = " CASE ";  // Koşullara göre farklı çıktılar verir.
zincir SQL_KONTROL								          = " CHECK ";  // Bir sütuna yerleştirilebilecek,bir değeri sınırlayan koşul
zincir SQL_OLUŞTUR_VERİ_TABANI	 				    = "CREATE DATABASE ";  //  
zincir SQL_OLUŞTUR_İNDEKS						        = "CREATE INDEX ";  // 
zincir SQL_OLUŞTUR_VEYA_YERDEĞİŞTİR_NESNE	 	= "CREATE OR REPLACE VIEW ";  // Nesneyi günceller
zincir SQL_OLUŞTUR_PROSEDÜR						      = "CREATE PROCEDURE ";  //
zincir SQL_OLUŞTUR_EŞSİZ_İNDEKS 				    = "CREATE UNIQUE INDEX ";  // Bir tabloda Bir eşsiz indeks oluşturur.(tekrarlanmış değer yok)
zincir SQL_OLUŞTUR_NESNE 						        = "CREATE VIEW ";  //SELECT sonucunda dönen sonuç kümesi temel alınarak nesne oluşturur.
zincir SQL_VARSAYILAN 							        = " DEFAULT ";  // Bir sütun iççin varsayılan değer belirler.
zincir SQL_SİL 									            = "DELETE ";  // Tablodan bir satır siler.
zincir SQL_AZALAN 								          = " DESC ";  // Sonuç kümesini azalan şekilde sıralar.
zincir SQL_FARKLI 								          = " DISTINCT ";  // Sonuç kümesinde sadece farklı değerleri döner.
zincir SQL_SİL_SÜTUN 							          = "DROP COLUMN ";  // Sütun siler.
zincir SQL_SİL_KOŞUL 							          = "DROP CONSTRAINT ";  // Bir koşulu siler.
zincir SQL_SİL_VERİ_TABANNI 					      = "DROP DATABASE ";  // Bir sql veri tabanınnı siler.
zincir SQL_SİL_VARSAYILAN 						      = "DROP DEFAULT ";  // Varsayılan koşulu siler.
zincir SQL_SİL_İNDEX 							          = "DROP INDEX ";  // Tablodaki bir indeksi siler.
zincir SQL_SİL_TABLO 							          = "DROP TABLE ";  // Veri tabanındaki mevcut bir tabloyu siler.
zincir SQL_SİL_NESNE 							          = "DROP VIEW ";  // 
zincir SQL_ÇALIŞTIR 							          = "EXEC ";  // Bir prosedürü çalıştırır.
zincir SQL_VARMI 								            = " EXISTS ";  // Herhangi bir kayıtın varlığı için test yapar. Varsa "doğru(true-boolean)" değeri döner.
zincir SQL_DIŞ_BAĞ		 						          = " FOREIGN KEY ";  // İki tabloyu birbirine bağlayan koşul anahtarı
zincir SQL_ŞURADAN 								          = " FROM ";  // Silinecek veya seçilecek tabloyu belirler.
zincir SQL_TAM_DIŞ_BİRLEŞ						        = " FULL OUTER JOIN ";  // Sol veya sağ tabloda eşleşme olduğunda bütün satırları döner.
zincir SQL_GRUPLA								            = " GROUP BY ";  // Sonuç kümesini yerleşik fonksiyonlarla(COUNT,MAX,MIN,SUM,AVG) gruplandırmayı sağlar.
zincir SQL_SAHİP								            = " HAVING ";  // WHERE ifadesinin yerine yerleşik fonksiyonlarla kullanılır.
zincir SQL_KAPSA								            = " IN ";  // WHERE ifadesindeki çoklu değerleri belirtmeyi sağlar.
zincir SQL_İÇ_BİRLEŞ							          = " INNER JOIN ";  // Her iki tabloda eşleşen değerleri içeren satırları döner.
zincir SQL_YERLEŞTİR							          = " INSERT INTO ";  // Tabloya yeni satırlar yerleştirir.
zincir SQL_SEÇ_YERLEŞTİR						        = " INSERT INTO SELECT ";  // Bir veriyi bir tablodan diğerine kopyalar.
zincir SQL_BOŞMU								            = " IS NULL ";  // Boş değerleri test eder.
zincir SQL_DOLUMU								            = " IS NOT NULL ";  // Boş olmayan değerleri test eder.
zincir SQL_SOL_BİRLEŞ							          = " LEFT JOIN ";  // Soldaki tablodan bütün satırları, sağdaki tablodan da eşleşen satırları döner.
zincir SQL_GİBİ									            = " LIKE ";  // WHERE ifadesinde bir sütunda belirli bir kalıbı aramak için kullanılır.
zincir SQL_LİMİT								            = " LIMIT ";  // Sonuç kümesinden alınacak kayıtların sayısını belirler.
zincir SQL_DEĞİL								            = " NOT ";  // Sadece bir koşulun doğru olmadığı satırları kapsar. 
zincir SQL_BOŞ_OLMAZ							          = " NOT NULL ";  // Bir sütunun boş değer kabul etmemesi için kullanılır.
zincir SQL_VEYA 								            = " OR ";  // İki koşuldan birinin doğru olduğu satırları kapsar.
zincir SQL_SIRALA 								          = " ORDER BY ";  // Sonuç kümesini azalan veya artan şekilde sıralar.
zincir SQL_DIŞ_BİRLEŞ							          = " OUTER JOIN ";  // Sol veya sağ tabloda eşleşme olan bütün satırları döner.
zincir SQL_PRİMER_ANAHTAR 						      = " PRIMARY KEY ";  // Bir tablodaki her kaydı eşşiz şekilde tanımlayacak koşul ifadesi.
zincir SQL_PROSEDÜR 							          = " PROCEDURE ";  // Kayıtlı prosedür (fonksiyon-işlem)
zincir SQL_SAĞ_BİRLEŞ							          = " RIGHT JOIN ";  // Sağdaki tablodan bütün satırları, soldaki tablodan da eşleşen satırları döner.
zincir SQL_SATIR_SAYI 							        = " ROWNUM ";  // Sonuç kümesinden kaç kayıt alınacağını belirtir.
zincir SQL_SEÇ 									            = " SELECT ";  // Veri tabanından veri seçer.
zincir SQL_SEÇ_FARKLI 							        = " SELECT DISTINCT ";  // Sadece farklı değerleri seçer.
zincir SQL_KOPYALA								          = " SELECT INTO ";  // Veriyi bir tablodan yeni bir tabloya kopyalar.  
zincir SQL_SEÇ_SAYI								          = " SELECT TOP ";  // Sonuç kümesinden kaç kayıt alınacağını belirtir.
zincir SQL_KÜME									            = " SET ";  // Tabloda hangi sütun ve değerlerin güncellenmesi gerektiğini belirtir.
zincir SQL_KAÇ									            = " TOP ";  // Sonuç kümesinden kaç kayıt alınacağını belirtir.
zincir SQL_VERİ_SİL								          = " TRUNCATE TABLE ";  // Tablonun içinden bir veri siler, tablonun kendisini değil.
zincir SQL_BİRLEŞTİR							          = " UNION ";  // İki veya daha çok SELECT ifadesinden gelen farklı değerleri birleştirir.
zincir SQL_HEP_BİRLEŞTİR						        = " UNION ALL ";  // İki veya daha çok SELECT ifadesinden gelen (aynı değerleri içerebilir) değerleri birleştirir.
zincir SQL_EŞSİZ								            = " UNIQUE ";  // Bir sütundaki bütün değerlerin eşsiz olma koşulu.
zincir SQL_GÜNCELLE 							          = " UPDATE ";  // Tablodaki mevcut satırları günceller.
zincir SQL_DEĞERLER 							          = " VALUES ";  // INSERT INTO ifadesi için değerleri belirler.
zincir SQL_OLAN									            = " WHERE ";  // Sonuç kümesindeki kayıtları filtreler.
